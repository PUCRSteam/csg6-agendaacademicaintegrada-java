name: deploy-aws
on: 
  push:
      branches:
        - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
            distribution: 'adopt'
            java-version: '17'
      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # -
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      - 
        name: Checkout Repository
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

          docker buildx create --use
          docker buildx inspect --bootstrap

          docker buildx build -t $DOCKERHUB_REPO_TAG:latest -t $DOCKERHUB_REPO_TAG:$GITHUB_SHA --push .

        # name: Build and push
        # uses: docker/build-push-action@v5
        # with:
        #   context: .
        #   push: true
        #   tags: 

  deploy:
      needs: docker
      name: Deploy to AWS
      runs-on: ubuntu-latest
      steps:
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
                aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.SESSION_TOKEN }}
                aws-region: us-east-1

          - name: Checkout
            uses: actions/checkout@v2

          - name: Upload to S3
            run: |
              mkdir deployment
              rsync -Rr . deployment
              zip -r deployment.zip deployment
              aws s3 cp deployment.zip s3://${{ secrets.S3_BUCKET }}/

          - name: Create deployment
            run: |
              aws deploy create-deployment --application-name codedeploy-2 \
                  --deployment-config-name CodeDeployDefault.OneAtATime \
                  --deployment-group-name producao-2 \
                  --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=deployment.zip